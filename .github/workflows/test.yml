name: Test

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

jobs:
  changes:
    name: Detect file changes
    runs-on: ubuntu-latest
    outputs:
      scenario: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Detect changes
        uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            playbooks:
              - playbooks/**/!(**.md)
              - molecule/playbooks/**
            common:
              - roles/common/**/!(**.md)
              - molecule/common/**
            hashicorp:
              - roles/hashicorp/**/!(**.md)
              - molecule/hashicorp/**
            logs:
              - roles/logs/**/!(**.md)
              - molecule/logs/**
            msmtp:
              - roles/msmtp/**/!(**.md)
              - molecule/msmtp/**
            nfs:
              - roles/nfs/**/!(**.md)
              - molecule/nfs/**
            nut:
              - roles/nut/**/!(**.md)
              - molecule/nut/**
            pia:
              - roles/pia/**/!(**.md)
              - molecule/pia/**
            proxmox:
              - roles/proxmox/**/!(**.md)
              - molecule/proxmox/**
            qemu_guest_agent:
              - roles/qemu_guest_agent/**/!(**.md)
              - molecule/qemu_guest_agent/**
            samba:
              - roles/samba/**/!(**.md)
              - molecule/samba/**
            sanoid:
              - roles/sanoid/**/!(**.md)
              - molecule/sanoid/**
            shellcheck:
              - roles/shellcheck/**/!(**.md)
              - molecule/shellcheck/**
            wireguard:
              - roles/wireguard/**/!(**.md)
              - molecule/wireguard/**
            zsh:
              - roles/zsh/**/!(**.md)
              - molecule/zsh/**

  test:
    name: "Test scenario ${{ matrix.scenario }} on ${{ matrix.os }}"
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.scenario != '[]' && needs.changes.outputs.scenario != '' }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu2204
          - ubuntu2004
          - debian11
          - debian10
        scenario: ${{ fromJSON(needs.changes.outputs.scenario) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ansible_collections/vladgh/system
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install test dependencies
        run: python3 -m pip install ansible-core molecule[docker] docker
      - name: Run Molecule tests
        run: molecule --base-config molecule/base.yml test --scenario-name ${{ matrix.scenario }}
        working-directory: ansible_collections/vladgh/system
        env:
          PY_COLORS: 1
          ANSIBLE_FORCE_COLOR: 1
          MOLECULE_DISTRO: ${{ matrix.os }}
      #   continue-on-error: true
      # - name: Debugging with tmate
      #   uses: mxschmitt/action-tmate@v3.11

      # # - name: Add Git Safe Directories
      # #   run: git config --global --add safe.directory /github/workspace/ansible_collections/vladgh/system

      # Cannot use this action until https://github.com/ansible/creator-ee/issues/19 is resolved or a workaround is found
      # - name: Test scenario
      #   uses: gofrolist/molecule-action@v2.2.28
      #   with:
      #     molecule_options: --debug --base-config molecule/base.yml
      #     molecule_command: converge
      #     molecule_args: --scenario-name ${{ matrix.scenario }}
      #     molecule_working_dir: ansible_collections/vladgh/system
      #   env:
      #     PY_COLORS: 1
      #     ANSIBLE_FORCE_COLOR: 1
      #     MOLECULE_DISTRO: ${{ matrix.os }}
