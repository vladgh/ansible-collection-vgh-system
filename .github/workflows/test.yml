name: Test

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      modified: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Detect changes
        uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            modified:
              - roles/(**|!(*.md))
              - molecule/(**|!(*.md))
              - playbooks/(**|!(*.md))

  # # JOB to build and test each of modified packages
  # build:
  #   needs: changes
  #   strategy:
  #     matrix:
  #       # Parse JSON array containing names of all filters matching any of changed files
  #       # e.g. ['package1', 'package2'] if both package folders contains changes
  #       package: ${{ fromJSON(needs.changes.outputs.packages) }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - ...

  # test:
  #   name: "Test role ${{ matrix.role }} on ${{ matrix.os }}"
  #   runs-on: ubuntu-latest
  #   needs: changes
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       os:
  #         - ubuntu2004
  #         - ubuntu1804
  #         - debian10
  #         - debian9
  #       role:
  #         - common
  #         - hashicorp
  #         - logs
  #         - msmtp
  #         - qemu_guest_agent
  #         - shellcheck
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2.3.4
  #       with:
  #         path: ansible_collections/vladgh/system
  #     # In order to optimize CI usage, we want the tests to only run when specific files change.
  #     # We cannot use GH workflow path filters because entire workflow would be skipped vs skipping
  #     # individual jobs which would still allow this status check to pass.
  #     - name: Check for file changes
  #       uses: dorny/paths-filter@v2.10.2
  #       id: changes
  #       with:
  #         working-directory: ansible_collections/vladgh/system
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         filters:  |
  #           "${{ matrix.role }}":
  #             - "**/roles/${{ matrix.role }}/**"
  #             - "**/molecule/${{ matrix.role }}/**"
  #     - name: Set up Python
  #       uses: actions/setup-python@v2.2.2
  #       with:
  #         python-version: 3.x
  #       if: ${{ steps.changes.outputs[matrix.role] == 'true' }}
  #     - name: Install dependencies
  #       run: |
  #         python3 -m pip install --upgrade pip
  #         python3 -m pip install docker ansible ansible-lint yamllint molecule molecule-docker
  #       if: ${{ steps.changes.outputs[matrix.role] == 'true' }}
  #     - name: Test role
  #       run: molecule test --scenario-name ${{ matrix.role }}
  #       working-directory: ansible_collections/vladgh/system
  #       env:
  #         PY_COLORS: 1
  #         ANSIBLE_FORCE_COLOR: 1
  #         MOLECULE_DISTRO: ${{ matrix.os }}
  #       if: ${{ steps.changes.outputs[matrix.role] == 'true' }}
