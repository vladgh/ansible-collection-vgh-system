name: Test

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

jobs:
  changes:
    name: Detect file changes
    runs-on: ubuntu-latest
    outputs:
      scenario: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Detect changes
        uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            playbooks:
              - playbooks/**/!(**.md)
              - molecule/playbooks/**
            common:
              - roles/common/**/!(**.md)
              - molecule/common/**
            hashicorp:
              - roles/hashicorp/**/!(**.md)
              - molecule/hashicorp/**
            logs:
              - roles/logs/**/!(**.md)
              - molecule/logs/**
            msmtp:
              - roles/msmtp/**/!(**.md)
              - molecule/msmtp/**
            nfs:
              - roles/nfs/**/!(**.md)
              - molecule/nfs/**
            nut:
              - roles/nut/**/!(**.md)
              - molecule/nut/**
            pia:
              - roles/pia/**/!(**.md)
              - molecule/pia/**
            qemu_guest_agent:
              - roles/qemu_guest_agent/**/!(**.md)
              - molecule/qemu_guest_agent/**
            samba:
              - roles/samba/**/!(**.md)
              - molecule/samba/**
            shellcheck:
              - roles/shellcheck/**/!(**.md)
              - molecule/shellcheck/**

  test:
    name: "Test scenario ${{ matrix.scenario }} on ${{ matrix.os }}"
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.scenario != '[]' && needs.changes.outputs.scenario != '' }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu:jammy
          - ubuntu:impish
          - ubuntu:focal
          - debian:bullseye
          - debian:buster
        scenario: ${{ fromJSON(needs.changes.outputs.scenario) }}
        # exclude:
          # # until this platform is supported in the Hashicorp repositories
          # - os: debian:bullseye
          #   scenario: hashicorp
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          path: ansible_collections/vladgh/system
      - name: Add Git Safe Directories
        run: git config --global --add safe.directory /github/workspace/ansible_collections/vladgh/system
      - name: Test scenario
        uses: gofrolist/molecule-action@v2.2.25
        with:
          molecule_options: --base-config molecule/base.yml
          molecule_command: test
          molecule_args: --scenario-name ${{ matrix.scenario }}
          molecule_working_dir: ansible_collections/vladgh/system
        env:
          PY_COLORS: 1
          ANSIBLE_FORCE_COLOR: 1
          MOLECULE_DISTRO: ${{ matrix.os }}
