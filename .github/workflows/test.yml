name: Test

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

jobs:
  changes:
    name: Detect file changes
    runs-on: ubuntu-latest
    outputs:
      scenario: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Detect changes
        uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            playbooks:
              - playbooks/!(**.md)
              - molecule/playbooks/**
            common:
              - roles/common/!(**.md)
              - molecule/common/**
            hashicorp:
              - roles/hashicorp/!(**.md)
              - molecule/hashicorp/**
            logs:
              - roles/logs/!(**.md)
              - molecule/logs/**
            msmtp:
              - roles/msmtp/!(**.md)
              - molecule/msmtp/**
            qemu_guest_agent:
              - roles/qemu_guest_agent/!(**.md)
              - molecule/qemu_guest_agent/**
            shellcheck:
              - roles/shellcheck/!(**.md)
              - molecule/shellcheck/**

  test:
    name: "Test scenario ${{ matrix.scenario }} on ${{ matrix.os }}"
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.scenario != '[]' && needs.changes.outputs.scenario != '' }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu:focal
          - ubuntu:bionic
          - debian:bullseye
          - debian:buster
        scenario: ${{ fromJSON(needs.changes.outputs.scenario) }}
        exclude:
          # until this platform is supported in the Hashicorp repositories
          - os: debian:bullseye
            scenario: hashicorp
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          path: ${{ github.repository }}
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade docker ansible ansible-lint yamllint molecule molecule-docker
      - name: Test scenario
        run: pwd; molecule test --scenario-name ${{ matrix.scenario }}
        working-directory: ${{ github.repository }}
        env:
          PY_COLORS: 1
          ANSIBLE_FORCE_COLOR: 1
          MOLECULE_DISTRO: ${{ matrix.os }}
